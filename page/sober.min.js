!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).sober=t()}(this,function(){"use strict";const r=e=>`<!--${e}-->`,d=(o,...e)=>({values:e,getTemplateHTML:()=>{var e=r(String(Math.random()).slice(2)),t=document.createElement("template");return t.innerHTML=o.join(e),{mark:e,template:t}}}),h=(e,i,a)=>{e.forEach(e=>{if(e.nodeType===Node.TEXT_NODE&&e.textContent?.includes(i)&&(e.textContent=e.textContent.replaceAll(i,()=>String(a.value))),e.nodeType===Node.COMMENT_NODE&&e.textContent&&i===r(e.textContent)&&e.parentNode.replaceChild(document.createTextNode(String(a.value)),e),e.nodeType===Node.ELEMENT_NODE){const s=e;s.getAttributeNames().forEach(e=>{var t=s.getAttribute(e);if("ref"===e&&t===i)return s.removeAttribute(e),a.value(s);if(e.startsWith("@")){const[o,r]=e.slice(1).split("."),n=t===i&&a.value;return s.addEventListener(o,e=>{n&&n(e,s),"stop"===r&&e.stopPropagation(),"prevent"===r&&e.preventDefault()},{passive:"passive"===r}),s.removeAttribute(e)}t?.includes(i)&&s.setAttribute(e,t.replaceAll(i,()=>String(a.value)))}),h(e.childNodes,i,a)}})},f={},u=new CSSStyleSheet;u.replaceSync(":host{ user-select: none;-webkit-user-select: none }");var e=c=>{const d=new Map;var e=[];for(const o in c.props)e.push(o);const p=new CSSStyleSheet;p.replaceSync(c.style??"");class t extends HTMLElement{static observedAttributes=e;constructor(){super();var e=this.attachShadow({mode:"closed"});const r={...c.props},n={props:{...c.props}};var t={};for(const s in this)s in HTMLElement.prototype||(t[s]=this[s]);for(const i in r)Object.defineProperty(this,i,{enumerable:!0,get:()=>r[i],set:e=>{e=((e,t)=>{if(void 0===e)return t;if("string"==typeof t)return String(e);if("number"==typeof t)return Number(e);if("boolean"==typeof t)return"boolean"==typeof e?e:"true"===e;throw new TypeError})(e,n.props[i]);if(e!==r[i]){if(!0===c.propSyncs||c.propSyncs?.includes(i)){var t=this.getAttribute(i),o=String(e);if(null!==t&&e===n.props[i])return void this.removeAttribute(i);if(o!==t&&e!==n.props[i])return void this.setAttribute(i,o)}r[i]=e,n.watches?.[i]?.(e)}}});for(const a in t)this[a]=t[a];const o=c.setup?.apply(this,[e]);e.adoptedStyleSheets=[u,p],e.appendChild(((e,t)=>{f[e]||(f[e]=t.getTemplateHTML());var{mark:e,template:o}=f[e],o=o.cloneNode(!0),r={index:0,get value(){var e=t.values[this.index];return this.index++,e}};return h(o.content.childNodes,e,r),o.content})(c.name,o.render())),n.events={adopted:o.adopted,mounted:o.mounted,unmounted:o.unmounted},n.watches=o.watches,o.created?.();for(const l in o.expose)Object.defineProperty(this,l,{get:()=>o.expose?.[l]});d.set(this,n)}connectedCallback(){d.get(this)?.events?.mounted?.()}disconnectedCallback(){d.get(this)?.events?.unmounted?.()}adoptedCallback(){d.get(this)?.events?.adopted?.()}attributeChangedCallback(e,t,o){this[e]=o??void 0}}return t.define=function(){customElements.get(c.name)||customElements.define(c.name,this)},t};class t extends e({name:"s-badge",props:{},style:`
:host{
  display: inline-flex;
  justify-content: center;
  align-items: center;
  min-width: 18px;
  height: 18px;
  background: var(--s-color-error, #ba1a1a);
  color: var(--s-color-on-error, #ffffff);
  border-radius: 18px;
  padding: 0 3px;
  font-size: .625rem;
  box-sizing: border-box;
  vertical-align: middle;
}
:host(:empty){
  min-width: 8px;
  height: 8px;
  margin: 5px;
}
`,setup(){return{render:()=>d`
        <slot></slot>
      `}}}){}t.define();const o=matchMedia("(pointer:coarse)"),l=(o.addEventListener("change",({matches:e})=>l.touched=e),{touched:o.matches,addEventListener:e=>o.addEventListener("change",()=>e(l.touched))}),n=document.createElement("div"),c=(n.setAttribute("style","position: fixed;right: 0;bottom: 0;width: 100%;height: 100%;pointer-events: none"),e=>{e.appendChild(n);var t=n.getBoundingClientRect();return e.removeChild(n),{left:t.left,top:t.top,width:t.width,height:t.height}});const p=e=>{const t=()=>{e(),document.removeEventListener("pointerup",t),document.removeEventListener("pointercancel",t)};document.addEventListener("pointerup",t),document.addEventListener("pointercancel",t)};class s extends e({name:"s-ripple",style:`
:host{
  display: inline-block;
  vertical-align: middle;
  position: relative;
  cursor: pointer;
}
:host([attached=true]){
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  border-radius: inherit;
}
.container{
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  pointer-events: none;
  overflow: hidden;
  border-radius: inherit;
}
.animation {
  background: var(--ripple-color, currentColor);
  border-radius: 50%;
  transition: opacity .8s;
  opacity: var(--ripple-opacity, .2);
  width: var(--size);
  height: var(--size);
  position: absolute;
  transform: translate(-50%, -50%) scale(0);
  left: var(--x);
  top: var(--y);
}
.container::before{
  content: '';
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
  border-radius: inherit;
  background: var(--ripple-color, currentColor);
  filter: opacity(0);
  transition: filter .2s;
  will-change: filter;
}
.container.hover::before{
  filter: opacity(.1);
}
`,props:{centered:!1,attached:!1},propSyncs:["attached"],setup(){let c;const e=()=>!l.touched&&c.classList.add("hover"),t=()=>!l.touched&&c.classList.remove("hover"),n=(e,t)=>{const o=document.createElement("div");o.className="animation";var{offsetWidth:r,offsetHeight:n}=c;let s=Math.sqrt(r*r+n*n);var i,a,l={x:"50%",y:"50%"},n=(this.centered||({left:i,top:a}=c.getBoundingClientRect(),i=e.clientX-i,e=e.clientY-a,a=n/2,n=r/2,r=2*(Math.abs(a-e)+a),a=2*(Math.abs(n-i)+n),s=Math.sqrt(r*r+a*a),l.x=i+"px",l.y=e+"px"),o.setAttribute("style",`--size: ${s}px;--x: ${l.x};--y: ${l.y};`),()=>o.isConnected&&c.removeChild(o)),r=(o.addEventListener("transitionend",n,{once:!0}),o.addEventListener("transitioncancel",n,{once:!0}),()=>o.style.opacity="0");if(c.appendChild(o),o.animate([{transform:"translate(-50%, -50%) scale(0)"},{transform:"translate(-50%, -50%) scale(1)"}],{duration:800,fill:"forwards",easing:"cubic-bezier(.2, .9, .1, .9)"}),!t)return p(r);window.getComputedStyle(o).top,r()},o=e=>{if("mouse"===e.pointerType)return n(e);let t=!1;const o=()=>clearTimeout(r),r=setTimeout(()=>{n(e,t),document.removeEventListener("pointermove",o)},80);p(()=>t=!0),document.addEventListener("pointermove",o,{once:!0})},r=e=>{0===e.button&&o(e)};let s=this;const i=()=>{(s=this.attached?this.parentNode instanceof ShadowRoot?this.parentNode.host:this.parentNode:this)?.addEventListener("mouseover",e),s?.addEventListener("mouseleave",t),s?.addEventListener("wheel",t,{passive:!0}),s?.addEventListener("pointerdown",r)},a=()=>{s?.removeEventListener("mouseover",e),s?.removeEventListener("mouseleave",t),s?.removeEventListener("wheel",t),s?.removeEventListener("pointerdown",r)};return{mounted:i,unmounted:a,watches:{attached:()=>{a(),i()}},render:()=>d`
        <slot></slot>
        <div class="container" ref="${e=>c=e}"></div>
      `}}}){}s.define();class i extends e({name:"s-button",style:`
:host{
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  display: inline-flex;
  vertical-align: middle;
  border-radius: 20px;
  padding: 0 24px;
  height: 40px;
  text-transform: capitalize;
  position: relative;
  cursor: pointer;
  font-size: .875rem;
  font-weight: 500;
  line-height: 1;
  white-space: nowrap;
  background: var(--s-color-primary, #5256a9);
  color: var(--s-color-on-primary, #ffffff);
  transition: box-shadow .2s;
  overflow: hidden;
}
:host([disabled=true]){
  pointer-events: none !important;
  background: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 12%, transparent) !important;
  color: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 38%, transparent) !important;
}
:host([type=elevated]){
  background: var(--s-color-surface-container-low, #f6f2f7);
  color: var(--s-color-primary, #5256a9);
  box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
}
:host([type=elevated][disabled=true]){
  box-shadow: none !important;
}
:host([type=filled-tonal]){
  background: var(--s-color-secondary-container, #e2e0f9);
  color: var(--s-color-on-secondary-container, #191a2c);
}
:host([type=outlined]){
  border: solid 1px var(--s-color-outline, #777680);
  background: none;
  color: var(--s-color-primary, #5256a9);
}
:host([type=outlined][disabled=true]){
  background: none !important;
  border-color: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 12%, transparent) !important;
}
:host([type=text]){
  background: none;
  color: var(--s-color-primary, #5256a9);
  padding: 0 16px;
}
:host([type=text][disabled=true]){
  background: none !important;
}
.ripple{
  border-radius: 0;
}
::slotted(*){
  color: inherit;
  width: 18px;
  height: 18px;
}
::slotted(s-icon[slot=start]){
  margin: 0 4px 0 -8px;
}
::slotted(s-icon[slot=end]){
  margin: 0 -8px 0 4px;
}
::slotted(s-circular-progress[slot=start]){
  margin: 0 8px 0 -8px;
}
::slotted(s-circular-progress[slot=end]){
  margin: 0 -8px 0 8px;
}
:host([type=text]) ::slotted(s-icon[slot=start]){
  margin: 0 4px 0 -4px;
}
:host([type=text]) ::slotted(s-icon[slot=end]){
  margin: 0 -4px 0 4px;
}
@media (pointer: coarse){
  :host([type=elevated]:active){
    box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
  }
  :host(:active),
  :host([type=filled-tonal]:active){
    box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
  }
  :host([type=outlined]:active),
  :host([type=text]:active){
    box-shadow: none;
  }
}
@media (pointer: fine){
  :host([type=elevated]:hover){
    box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
  }
  :host(:hover),
  :host([type=filled-tonal]:hover){
    box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
  }
  :host([type=outlined]:hover),
  :host([type=text]:hover){
    box-shadow: none;
  }
}
`,props:{disabled:!1,type:"filled"},propSyncs:!0,setup(){return{render:()=>d`
        <slot name="start"></slot>
        <slot></slot>
        <slot name="end"></slot>
        <s-ripple class="ripple" attached="true"></s-ripple>
      `}}}){}i.define();class a extends e({name:"s-card",style:`
:host{
  display: inline-block;
  vertical-align: middle;
  background: var(--s-color-surface-container-low, #f6f2f7);
  box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .1));
  border-radius: 12px;
  position: relative;
  font-size: .875rem;
  box-sizing: border-box;
  // max-width: 300px;
  color: var(--s-color-on-surface, #1c1b1f);
  overflow: hidden;
}
:host([type=filled]){
  background: var(--s-color-surface-container-highest, #e5e1e6);
  box-shadow: none;
}
:host([type=outlined]){
  background: var(--s-color-surface, #fffbff);
  border: solid 1px var(--s-color-outline-variant, #c7c5d0);
  box-shadow: none;
}
:host([clickable=true]){
  cursor: pointer;
  transition: box-shadow .2s;
}
:host([clickable=true]) .ripple{
  display: block;
}
.action{
  display: flex;
  justify-content: flex-end;
  padding: 0 12px;
}
.ripple{
  display: none;
  border-radius: 0;
}
::slotted([slot=image]){
  display: block;
  height: 128px;
  background: var(--s-color-surface-container-high, #eae7ec);
}
::slotted([slot=headline]){
  font-size: 1.5rem;
  line-height: 1.6;
  margin: 16px 16px 0 16px;
}
::slotted([slot=subhead]){
  font-size: 1rem;
  line-height: 1.6;
  margin: 4px 16px;
}
::slotted([slot=text]){
  line-height: 1.6;
  margin: 8px 16px;
  color: var(--s-color-on-surface-variant, #46464f);
}
::slotted(s-button[slot=action]){
  margin: 16px 4px;
}
@media (pointer: fine){
  :host([clickable=true][type=filled]:hover),
  :host([clickable=true][type=outlined]:hover){
    box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .1));
  }
  :host([clickable=true]:hover){
    box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
  }
}
`,props:{type:"elevated",clickable:!1},propSyncs:!0,setup(){return{render:()=>d`
        <slot name="start"></slot>
        <slot name="image"></slot>
        <slot name="headline"></slot>
        <slot name="subhead"></slot>
        <slot name="text"></slot>
        <slot></slot>
        <div class="action">
          <slot name="action" @pointerdown.stop></slot>
        </div>
        <slot name="end"></slot>
        <s-ripple class="ripple" attached="true"></s-ripple>
      `}}}){}a.define();class v extends e({name:"s-carousel",style:`
:host{
  display: block;
  height: 280px;
  background: var(--s-color-surface-container-low, #f6f2f7);
  border-radius: 8px;
  position: relative;
  color: var(--s-color-primary, #5256a9);
  overflow: hidden;
}
.container{
  display: flex;
  justify-content: flex-start;
  height: 100%;
  transition: transform .2s;
}
.dot{
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
}
.dot>.item{
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--s-color-secondary-container, #e2e0f9);
  flex-shrink: 0;
  margin: 16px 4px;
  cursor: pointer;
  pointer-events: auto;
}
.dot>.checked{
  background: currentColor;
  opacity: 1;
}
::slotted(*){
  display: block;
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
`,props:{duration:4e3},setup(){let t,s,i,a=0,l=0,e=0;const o=()=>{t.style.transform=`translateX(-${100*a}%)`,s.querySelector(".checked")?.classList.remove("checked"),s.children[a]?.classList.add("checked")},c=()=>{clearInterval(e),o(),0!==l&&(e=setInterval(()=>{var e=a+1;a=e===l?0:e,o()},this.duration))};return{mounted:c,unmounted:()=>clearInterval(e),watches:{duration:c},render:()=>d`
        <div class="container" ref="${e=>t=e}">
          <slot ref="${e=>i=e}" @slotchange="${()=>{s.innerHTML="";var e=i.assignedElements(),t=document.createDocumentFragment();for(const r in e){var o=document.createElement("div");const n=Number(r);o.className=0===n?"item checked":"item",o.addEventListener("click",()=>{a=n,c()}),t.appendChild(o)}l=e.length,s.appendChild(t),a=0,c()}}"></slot>
        </div>
        <div class="dot" ref="${e=>s=e}"></div>
      `}}}){}v.define();const m={indeterminate:"M280-440h400v-80H280v80Zm-80 320q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Z",uncheck:"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Zm0-80h560v-560H200v560Z",checked:"m424-312 282-282-56-56-226 226-114-114-56 56 170 170ZM200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Z"};class x extends e({name:"s-checkbox",style:`
:host{
  display: inline-flex;
  vertical-align: middle;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  position: relative;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  color: var(--s-color-primary, #5256a9);
}
:host([disabled=true]){
  pointer-events: none !important;
}
.icon{
  width: 60%;
  height: 60%;
  fill: currentColor;
}
.color{
  color: var(--s-color-on-surface-variant, #46464f);
}
:host([checked=true]) .color,
:host([indeterminate=true]) .color{
  color: currentColor;
}
:host([disabled=true]) .color{
  color: color-mix(in srgb ,var(--s-color-on-surface, #1c1b1f) 38%, transparent) !important;
}
`,props:{disabled:!1,checked:!1,indeterminate:!1},propSyncs:!0,setup(){let t;return this.addEventListener("click",()=>{if(this.indeterminate)return this.indeterminate=!1;this.checked=!this.checked,this.dispatchEvent(new Event("change"))}),{watches:{indeterminate:e=>t.setAttribute("d",e?m.indeterminate:this.checked?m.checked:m.uncheck),checked:e=>!this.indeterminate&&t.setAttribute("d",e?m.checked:m.uncheck)},render:()=>d`
        <svg class="icon color" viewBox="0 -960 960 960">
          <path ref="${e=>t=e}" d="${m.uncheck}"></path>
        </svg>
        <s-ripple class="color" attached="true" centered="true"></s-ripple>
      `}}}){}x.define();class g extends e({name:"s-chip",style:`
:host{
  display: inline-flex;
  align-items: center;
  vertical-align: middle;
  padding: 0 16px;
  height: 32px;
  border: solid 1px var(--s-color-color-outline, #777680);
  border-radius: 8px;
  box-sizing: border-box;
  font-size: .875rem;
  position: relative;
  cursor: pointer;
  overflow: hidden;
}
:host([type=elevated]){
  border: none;
  box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
}
:host([type=filled-tonal]){
  background: var(--s-color-secondary-container, #e2e0f9);
  color: var(--s-color-on-surface-variant, #46464f);
  border: none;
}
.ripple{
  display: none;
  border-radius: 0;
}
:host([clickable=true]) .ripple{
  display: block;
}
::slotted(*){
  width: 18px;
  height: 18px;
}
::slotted([slot=start]){
  margin: 0 8px 0 -8px;
}
::slotted([slot=end]){
  margin: 0 -8px 0 8px;
}
::slotted(s-icon-button[slot=action]){
  margin: 0 -12px 0 8px;
  width: 24px;
  height: 24px;
  padding: 3px;
  flex-shrink: 0;
}
`,props:{type:"outlined",clickable:!1},propSyncs:!0,setup(){return{render:()=>d`
        <slot name="start"></slot>
        <slot></slot>
        <slot name="end"></slot>
        <slot name="action" @pointerdown.stop></slot>
        <s-ripple class="ripple" attached="true"></s-ripple>
      `}}}){}g.define();class b extends e({name:"s-circular-progress",style:`
:host{
  display: inline-block;
  vertical-align: middle;
  position: relative;
  width: 48px;
  height: 48px;
  color: var(--s-color-primary, #5256a9);
}
:host([indeterminate=true]) .determinable,
.indeterminate{
  display: none;
}
:host([indeterminate=true]) .indeterminate{
  display: block;
  animation: rotate 1568ms linear infinite;
  width: inherit;
  height: inherit;
}
@keyframes stroke{
  0% { stroke-dashoffset: var(--dasharray) }
  50% { stroke-dashoffset: calc(var(--dasharray) / 4) }
  100% { stroke-dashoffset: var(--dasharray) }
}
@keyframes stroke-rotate{
  0% { transform: rotate(0deg) }
  12.5% { transform: rotate(0deg) }
  25% {transform: rotate(270deg)}
  37.5% {transform: rotate(270deg)}
  50% {transform: rotate(540deg)}
  62.5% {transform: rotate(540deg)}
  75% {transform: rotate(810deg)}
  87.5% {transform: rotate(810deg)}
  100% { transform: rotate(1080deg) }
  100% { transform: rotate(1080deg) }
}
@keyframes rotate{
  0% { transform: rotate(0deg) }
  100% { transform: rotate(360deg) }
}
svg{
  height: inherit;
  width: inherit;
  stroke: currentColor;
}
circle{
  stroke-linecap: round;
  fill: none;
  stroke-dasharray: var(--dasharray)
}
.unckecked{
  stroke: var(--s-color-secondary-container, #e2e0f9);
}
`,props:{indeterminate:!1,max:100,value:0},propSyncs:["indeterminate"],setup(){let t;const o=44*Math.PI;var e=()=>{var e=Math.min(this.value,this.max)/this.max*100;t.style.strokeDashoffset=o-o*(e/100)+"px"};return{watches:{max:e,value:e},render:()=>d`
        <svg class="determinable" viewBox="0 0 48 48" style="transform: rotate(-90deg);--dasharray: ${o}px;">
          <circle class="unckecked" cx="${24}" cy="${24}" r="${22}" style="stroke-width: ${4}px" />
          <circle ref="${e=>t=e}" cx="${24}" cy="${24}" r="${22}" style="stroke-dashoffset: ${o}px;stroke-width: ${4}px" />
        </svg>
        <div class="indeterminate">
          <svg viewBox="0 0 48 48" style="animation: stroke-rotate 5.2s ease-in-out infinite;--dasharray: ${o}px;">
            <circle transform="rotate(-90, ${24}, ${24})" cx="${24}" cy="${24}" r=" ${22}" style="animation: stroke 1.3s ease-in-out infinite;stroke-width: ${4}px"></circle>
          </svg>
        </div>
      `}}}){}b.define();class y extends e({name:"s-scroll-view",style:`
:host{
  display: block;
  overflow: auto;
}
@media (pointer: fine){
  :host::-webkit-scrollbar{
    width: 6px;
    height: 6px;
    background: transparent;
  }
  :host::-webkit-scrollbar-thumb{
    background: var(--s-color-outline-variant, #c7c5d0);
    border-radius: 3px;
  }
  @supports not selector(::-webkit-scrollbar){
    :host{
      scrollbar-color: var(--s-color-outline-variant, #c7c5d0) transparent;
    }
  }
}
`,props:{},setup(){return{render:()=>d`
        <slot></slot>
      `}}}){}y.define();class w extends e({name:"s-dialog",style:`
:host{
  display: inline-block;
  vertical-align: middle;
}
.wrapper{
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  pointer-events: none;
  transition: filter .2s;
  filter: opacity(0);
}
.wrapper.show{
  filter: opacity(1);
  pointer-events: auto;
}
.scrim{
  background: var(--s-color-scrim, #000000);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  filter: opacity(.8);
}
.wrapper-container{
  display: flex;
  justify-content: center;
  align-items: center;
  pointer-events: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform: scale(.9);
  transition: transform .2s;
}
.wrapper.show .wrapper-container{
  transform: scale(1);
}
.container{
  max-width: calc(100% - 48px);
  max-height: calc(100% - 48px);
  background: var(--s-color-surface-container-highest, #e5e1e6);
  position: relative;
  border-radius: 28px;
  box-shadow: var(--s-elevation-level5, 0 8px 10px -6px rgba(0, 0, 0, .2), 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12));
  display: flex;
  flex-direction: column;
  overflow: hidden;
}
.wrapper.show .container{
  pointer-events: auto;
}
:host([size=full]) .container{
  width: 100%;
  height: 100%;
  border-radius: 0;
  max-width: none;
  max-height: none;
}
::slotted([slot=headline]){
  padding: 24px 24px 0 24px;
  font-size: 1.5rem;
  line-height: 1.6;
  font-weight: 600;
  color: var(--s-color-on-surface, #1c1b1f);
  flex-shrink: 0;
}
.text{
  user-select: text;
  -webkit-user-select: text;
  flex-grow: 1;
}
::slotted([slot=text]){
  margin: 16px 24px;
  line-height: 1.6;
}
.action{
  display: flex;
  justify-content: flex-end;
  padding: 0 14px;
  flex-shrink: 0;
}
::slotted(s-button[slot=action]){
  min-width: 72px;
  margin: 20px 2px;
}
::slotted([slot=text]),
::slotted(:not([slot])){
  max-width: 240px;
  min-width: 200px;
}
:host([size=full]) ::slotted([slot=text]),
:host([size=full]) ::slotted(:not([slot])){
  max-width: none;
}
`,props:{size:"basic"},propSyncs:["size"],setup(t){let o;const e=()=>{var e=c(t);0===e.top&&0===e.left||o.setAttribute("style",`width: ${innerWidth}px;height: ${innerHeight}px;top: ${0-e.top}px;left: ${0-e.left}px`),o.classList.add("show"),this.dispatchEvent(new Event("show"))},r=()=>{o.classList.remove("show"),this.dispatchEvent(new Event("dismiss"))},n=e=>{"transform"===e.propertyName&&(e=o.classList.contains("show"),this.dispatchEvent(new Event(e?"showed":"dismissed")))};return{expose:{show:e,dismiss:r},render:()=>d`
        <slot name="trigger" @click="${e}"></slot>
        <div class="wrapper" ref="${e=>o=e}" @transitionend="${n}">
          <div class="scrim" @click="${r}"></div>
          <div class="wrapper-container">
            <div class="container" part="container">
              <slot name="headline"></slot>
              <s-scroll-view class="text">
                <slot></slot>
                <slot name="text"></slot>
              </s-scroll-view>
              <div class="action">
                <slot name="action" @click="${r}"></slot>
              </div>
            </div>
          </div>
        </div>
      `}}}){static show=e=>{let t=document.body;const o=new w;var r,n=document.body.firstElementChild,n=(n&&"S-PAGE"===n.tagName&&(t=n),document.createElement("div"));if(n.slot="text","string"==typeof e)n.textContent=e,o.appendChild(n);else{e.root&&(t=e.root),e.headline&&((r=document.createElement("div")).slot="headline",r.textContent=e.headline,o.appendChild(r)),n.textContent=e.text,o.appendChild(n);for(const i of e.actions??[]){var s=document.createElement("s-button");s.slot="action",s.type="text",s.textContent=i.text,i.click&&s.addEventListener("click",i.click),o.appendChild(s)}}t.appendChild(o),o.addEventListener("dismissed",()=>t.removeChild(o)),o.show()}}w.define();class k extends e({name:"s-divider",style:`
:host{
  display: block;
  height: 1px;
  background: var(--s-color-outline-variant, #c7c5d0);
  margin: 0 16px;
}
`,props:{},setup(){return{render:()=>d`
        <slot></slot>
      `}}}){}k.define();class $ extends e({name:"s-drawer",props:{fold:840},style:`
:host{
  display: block;
  height: 100%;
}
.container{
  display: flex;
  height: 100%;
  position: relative;
  overflow: hidden;
}
.scrim{
  background: var(--s-color-scrim, #000000);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  filter: opacity(0);
  pointer-events: none;
  transition: filter .2s;
}
.start,
.end{
  min-width: 0;
  height: 100%;
  width: 0;
  overflow: hidden;
  flex-shrink: 0;
}
.show-start>.start,
.show-end>.end{
  width: auto;
}
.start{
  order: -1;
}
::slotted(:not([slot])){
  flex-grow: 1;
  min-width: 0;
}
::slotted([slot=start]),
::slotted([slot=end]){
  width: 280px;
  display: flow-root;
  flex-shrink: 0;
  background: var(--s-color-surface-container-low, #f6f2f7);
  border-color: var(--s-color-surface-container-high, #eae7ec);
  border-width: 1px;
  height: 100%;
  box-sizing: border-box;
  position: relative;
}
::slotted([slot=start]){
  border-right-style: solid;
}
::slotted([slot=end]){
  border-left-style: solid;
}
.folded>.start,
.folded>.end{
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  pointer-events: none;
  visibility: hidden;
  display: flex;
}
.folded>.end{
  justify-content: flex-end;
}
.folded ::slotted([slot=start]),
.folded ::slotted([slot=end]){
  pointer-events: auto;
  max-width: 75%;
  border-style: none;
  box-shadow: var(--s-elevation-level3, 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12));
}
.folded.show-fold-start>.scrim,
.folded.show-fold-end>.scrim{
  filter: opacity(.8);
  pointer-events: auto;
}
.folded.show-fold-start>.start,
.folded.show-fold-end>.end{
  visibility: visible;
}
`,setup(){let n;const s={start:void 0,end:void 0},i={start:void 0,end:void 0},a=200,r=(e="start",t)=>{var t=void 0===t?n.classList.contains("folded"):t,o=t?"show-fold-"+e:"show-"+e;n.classList.contains(o)||(n.classList.add(o),o=i[e]?.offsetWidth??0,t=t?[{transform:`translateX(${"start"===e?-1*o:o}px)`},{transform:"translateX(0px)"}]:[{width:0},{width:o+"px"}],s[e].animate(t,{duration:a}))},l=(e="start",t)=>{var o,t=void 0===t?n.classList.contains("folded"):t,r=t?"show-fold-"+e:"show-"+e;n.classList.contains(r)&&(o=i[e]?.offsetWidth??0,n.classList.remove(r),r=t?[{transform:"translateX(0px)",visibility:"visible"},{transform:`translateX(${"start"===e?-1*o:o}px)`,visibility:"visible"}]:[{width:o+"px"},{width:0}],s[e].animate(r,{duration:a}))};return new ResizeObserver(()=>this.offsetWidth<this.fold?n.classList.add("folded"):n.classList.remove("folded")).observe(this),{expose:{show:r,dismiss:l,toggle:(e="start",t)=>{var o=(void 0===t?n.classList.contains("folded"):t)?"show-fold-"+e:"show-"+e;(n.classList.contains(o)?l:r)(e,t)}},render:()=>d`
        <div class="container show-start show-end" ref="${e=>n=e}">
          <slot></slot>
          <div class="scrim" @click="${()=>{l("start"),l("end")}}"></div>
          <div class="start" ref="${e=>s.start=e}">
            <slot name="start" @slotchange="${(e,t)=>i.start=t.assignedElements()[0]}"></slot>
          </div>
          <div class="end" ref="${e=>s.end=e}">
            <slot name="end" @slotchange="${(e,t)=>i.end=t.assignedElements()[0]}"></slot>
          </div>
        </div>
      `}}}){}$.define();class E extends e({name:"s-dropdown",style:`
:host{
  display: inline-block;
  vertical-align: middle;
  text-align: start;
}
.wrapper{
  pointer-events: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  overflow: hidden;
}
.scrim{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.show .scrim{
  pointer-events: auto;
}
.container{
  position: absolute;
  pointer-events: none;
  white-space: nowrap;
  opacity: 0;
}
.show .container{
  pointer-events: auto;
  opacity: 1;
}
::slotted(*:not([slot])){
  background: var(--s-color-surface-container-low, #f6f2f7);
  border-radius: 4px;
  box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
  min-width: var(--dropdown-min-width, auto);
  max-height: 100vh;
}
`,props:{align:"center"},setup(e){let i,a,l;const t=t=>{if(this.isConnected&&!a.classList.contains("show")){var o=c(e),o=(0===o.top&&0===o.left||a.setAttribute("style",`width: ${innerWidth}px;height: ${innerHeight}px;top: ${0-o.top}px;left: ${0-o.left}px`),{top:0,left:0,origin:[]});if(!t||t instanceof HTMLElement){var r=t||i,r=(a.style.setProperty("--dropdown-min-width",r.offsetWidth+"px"),r.getBoundingClientRect()),n=l.offsetWidth,s=l.offsetHeight;o.origin=["center","top"],o.top=r.y+r.height,o.left=r.x-(n-r.width)/2;let e={left:{value:r.x,origin:"left"},right:{value:r.x+r.width-n,origin:"right"},top:{value:r.top-s,origin:"bottom"}};"left"===this.align&&(o.origin[0]="right",o.left=r.x-n,o.top=r.y,e={left:{value:r.x+r.width,origin:"left"},right:{value:o.left,origin:o.origin[0]},top:{value:r.y+r.height-s,origin:"bottom"}}),"right"===this.align&&(o.origin[0]="left",o.left=r.x+r.width,o.top=r.y,e={left:{value:o.left,origin:o.origin[0]},right:{value:r.x-n,origin:"right"},top:{value:r.y+r.height-s,origin:"bottom"}}),o.left<0&&(o.origin[0]=e.left.origin,o.left=e.left.value),o.left+n>innerWidth&&(o.origin[0]=e.right.origin,o.left=Math.max(e.right.value,0)),o.top+s>innerHeight&&(o.origin[1]=e.top.origin,o.top=Math.max(e.top.value,0))}else o.top=t.y,o.left=t.x,o.origin=t.origin?t.origin.split(" "):["left","top"],t.x+l.offsetWidth>innerWidth&&(o.left=t.x-l.offsetWidth,o.origin[0]="right"),t.y+l.offsetHeight>innerHeight&&(o.top=t.y-l.offsetHeight,o.origin[1]="bottom");l.style.transformOrigin=o.origin.join(" "),l.style.top=o.top+"px",l.style.left=o.left+"px",a.classList.add("show"),l.animate([{transform:"scale(.9)",opacity:0},{transform:"scale(1)",opacity:1}],{duration:100})}},o=()=>{this.isConnected&&a.classList.contains("show")&&(a.classList.remove("show"),l.animate([{transform:"scale(1)",opacity:1},{transform:"scale(.9)",opacity:0}],{duration:100}))};return{expose:{show:t,dismiss:o,toggle:e=>{this.isConnected&&(a.classList.contains("show")?o():t(e))}},mounted:()=>addEventListener("resize",o),unmounted:()=>removeEventListener("resize",o),render:()=>d`
        <div ref="${e=>i=e}" @click="${()=>t()}">
          <slot name="trigger"></slot>
        </div>
        <div class="wrapper" ref="${e=>a=e}">
          <div class="scrim" @pointerdown="${o}"></div>
          <div class="container" ref="${e=>l=e}">
            <slot></slot>
          </div>
        </div>
      `}}}){}E.define();class T extends e({name:"s-fab",style:`
:host{
  display: inline-flex;
  justify-content: center;
  align-items: center;
  vertical-align: middle;
  position: relative;
  cursor: pointer;
  box-sizing: border-box;
  height: 56px;
  width: 56px;
  border-radius: 28px;
  background: var(--s-color-primary-container, #e1e0ff);
  color: var(--s-color-on-primary-container, #090764);
  transition: box-shadow .2s;
  font-size: .875rem;
  font-weight: 500;
  white-space: nowrap;
  line-height: 1;
  text-transform: capitalize;
  box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
}
:host([size=small]){
  height: 48px;
  width: 48px;
  border-radius: 24px;
}
:host([extended=true]){
  padding: 0 16px;
  width: auto;
  height: 48px;
  border-radius: 24px;
}
:host(:not([extended=true])[size=large]){
  height: 72px;
  width: 72px;
  border-radius: 36px;
}
:host(:not([extended=true])[size=large]) ::slotted(*){
  width: 36px;
  height: 36px;
}
::slotted(s-icon){
  color: inherit;
}
::slotted(s-icon[slot=start]){
  margin: 0 8px 0 0;
}
::slotted(s-icon[slot=end]){
  margin: 0 0 0 8px;
}
@media (pointer: coarse){
  :host(:active){
    box-shadow: var(--s-elevation-level4, 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12));
  }
}
@media (pointer: fine){
  :host(:hover){
    box-shadow: var(--s-elevation-level4, 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12));
  }
}
`,props:{size:"medium",extended:!1},propSyncs:!0,setup(){let t;return{watches:{extended:e=>t.setAttribute("centered",String(!e))},render:()=>d`
        <s-ripple attached="true" centered="true" ref="${e=>t=e}"></s-ripple>
        <slot name="start"></slot>
        <slot></slot>
        <slot name="end"></slot>
      `}}}){}T.define();class _ extends e({name:"s-icon-button",style:`
:host{
  display: inline-flex;
  vertical-align: middle;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  color: var(--s-color-on-surface-variant, #46464f);
  position: relative;
  box-sizing: border-box;
  overflow: hidden;
}
:host([disabled=true]){
  pointer-events: none !important;
  color: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 38%, transparent) !important;
}
:host([type=filled]){
  background: var(--s-color-primary, #5256a9);
  color: var(--s-color-on-primary, #ffffff);
}
:host([type=filled][disabled=true]){
  background: color-mix(in srgb ,var(--s-color-on-surface, #1c1b1f) 12%, transparent) !important;
}
:host([type=filled-tonal]){
  background: var(--s-color-secondary-container, #e2e0f9);
  color: var(--s-color-on-secondary-container, #191a2c);
}
:host([type=filled-tonal][disabled=true]){
  background: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 12%, transparent) !important;
}
:host([type=outlined]){
  border: solid 1px var(--s-color-outline, #777680)
}
:host([type=outlined][disabled=true]){
  border-color: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f)) !important;
}
.ripple{
  border-radius: 0;
}
::slotted(*){
  color: inherit;
}
`,props:{disabled:!1,type:"standard"},propSyncs:!0,setup(){return{render:()=>d`
        <slot name="start"></slot>
        <slot></slot>
        <slot name="end"></slot>
        <s-ripple class="ripple" attached="true" centered="true"></s-ripple>
      `}}}){}_.define();const q={none:"",home:"M240-200h120v-240h240v240h120v-360L480-740 240-560v360Zm-80 80v-480l320-240 320 240v480H520v-240h-80v240H160Zm320-350Z",add:"M440-440H200v-80h240v-240h80v240h240v80H520v240h-80v-240Z",search:"M784-120 532-372q-30 24-69 38t-83 14q-109 0-184.5-75.5T120-580q0-109 75.5-184.5T380-840q109 0 184.5 75.5T640-580q0 44-14 83t-38 69l252 252-56 56ZM380-400q75 0 127.5-52.5T560-580q0-75-52.5-127.5T380-760q-75 0-127.5 52.5T200-580q0 75 52.5 127.5T380-400Z",menu:"M120-240v-80h720v80H120Zm0-200v-80h720v80H120Zm0-200v-80h720v80H120Z",arrow_back:"m313-440 224 224-57 56-320-320 320-320 57 56-224 224h487v80H313Z",arrow_forward:{name:"arrow_back",angle:180},arrow_upward:{name:"arrow_back",angle:90},arrow_downward:{name:"arrow_back",angle:-90},arrow_drop_up:"m280-400 200-200 200 200H280Z",arrow_drop_down:{name:"arrow_drop_up",angle:180},arrow_drop_left:{name:"arrow_drop_up",angle:-90},arrow_drop_right:{name:"arrow_drop_up",angle:90},more_vert:"M480-160q-33 0-56.5-23.5T400-240q0-33 23.5-56.5T480-320q33 0 56.5 23.5T560-240q0 33-23.5 56.5T480-160Zm0-240q-33 0-56.5-23.5T400-480q0-33 23.5-56.5T480-560q33 0 56.5 23.5T560-480q0 33-23.5 56.5T480-400Zm0-240q-33 0-56.5-23.5T400-720q0-33 23.5-56.5T480-800q33 0 56.5 23.5T560-720q0 33-23.5 56.5T480-640Z",more_horiz:{name:"more_vert",angle:90},close:"m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z",done:"M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z",chevron_up:"M480-528 296-344l-56-56 240-240 240 240-56 56-184-184Z",chevron_down:{name:"chevron_up",angle:180},chevron_left:{name:"chevron_up",angle:-90},chevron_right:{name:"chevron_up",angle:90},light_mode:"M480-360q50 0 85-35t35-85q0-50-35-85t-85-35q-50 0-85 35t-35 85q0 50 35 85t85 35Zm0 80q-83 0-141.5-58.5T280-480q0-83 58.5-141.5T480-680q83 0 141.5 58.5T680-480q0 83-58.5 141.5T480-280ZM200-440H40v-80h160v80Zm720 0H760v-80h160v80ZM440-760v-160h80v160h-80Zm0 720v-160h80v160h-80ZM256-650l-101-97 57-59 96 100-52 56Zm492 496-97-101 53-55 101 97-57 59Zm-98-550 97-101 59 57-100 96-56-52ZM154-212l101-97 55 53-97 101-59-57Zm326-268Z",dark_mode:"M480-120q-150 0-255-105T120-480q0-150 105-255t255-105q14 0 27.5 1t26.5 3q-41 29-65.5 75.5T444-660q0 90 63 153t153 63q55 0 101-24.5t75-65.5q2 13 3 26.5t1 27.5q0 150-105 255T480-120Zm0-80q88 0 158-48.5T740-375q-20 5-40 8t-40 3q-123 0-209.5-86.5T364-660q0-20 3-40t8-40q-78 32-126.5 102T200-480q0 116 82 198t198 82Zm-10-270Z",star:"m354-287 126-76 126 77-33-144 111-96-146-13-58-136-58 135-146 13 111 97-33 143ZM233-120l65-281L80-590l288-25 112-265 112 265 288 25-218 189 65 281-247-149-247 149Zm247-350Z",favorite:"m480-120-58-52q-101-91-167-157T150-447.5Q111-500 95.5-544T80-634q0-94 63-157t157-63q52 0 99 22t81 62q34-40 81-62t99-22q94 0 157 63t63 157q0 46-15.5 90T810-447.5Q771-395 705-329T538-172l-58 52Zm0-108q96-86 158-147.5t98-107q36-45.5 50-81t14-70.5q0-60-40-100t-100-40q-47 0-87 26.5T518-680h-76q-15-41-55-67.5T300-774q-60 0-100 40t-40 100q0 35 14 70.5t50 81q36 45.5 98 107T480-228Zm0-273Z"};class j extends e({name:"s-icon",style:`
:host{
  display: inline-flex;
  vertical-align: middle;
  justify-content: center;
  align-items: center;
  width: 24px;
  height: 24px;
  color: var(--s-color-on-surface-variant, #46464f);
  fill: currentColor;
  box-sizing: border-box;
}
svg{
  width: 100%;
  height: 100%;
}
::slotted(*){
  width: 100%;
  height: 100%;
}
`,props:{type:"none"},propSyncs:["type"],setup(){let o;return{watches:{type:e=>{let t=q[e];"object"==typeof t?(o.setAttribute("transform",`rotate(${t.angle} 480 -480)`),t=q[t.name]):o.removeAttribute("transform"),o.setAttribute("d",t)}},render:()=>d`
        <slot>
          <svg viewBox="0 -960 960 960">
            <path ref="${e=>o=e}" d="${q.none}"></path>
          </svg>
        </slot>
      `}}}){}j.define();class B extends e({name:"s-linear-progress",style:`
:host{
  display: block;
  height: 4px;
  color: var(--s-color-primary, #5256a9);
  position: relative;
  border-radius: 2px;
  overflow: hidden;
}
.track{
  background: var(--s-color-secondary-container, #e2e0f9);
  height: 100%;
}
.float{
  position: absolute;
  height: 100%;
  width: 100%;
  left: 0;
  top: 0;
}
.determinable{
  background: currentColor;
  transform: translateX(-100%);
}
.indeterminate::before,
.indeterminate::after{
  content: '';
  position: absolute;
  height: 100%;
  top: 0;
  bottom: 0;
  left: 0;
  background: currentColor;
  animation: translate 2s linear infinite;
}
.indeterminate::after{
  animation: translate2 2s linear infinite;
}
:host([indeterminate=true]) .determinable,
.indeterminate{
  display: none;
}
:host([indeterminate=true]) .indeterminate{
  display: block;
}
@keyframes translate{
  0% { left: 0; width: 0 }
  50% { left: 30%; width: 70% }
  75% { left: 100%; width: 0 }
}
@keyframes translate2{
  0% { left: 0; width: 0 }
  50% { left: 0; width: 0 }
  75% { left: 0; width: 25% }
  100% { left: 100%; width: 0 }
}
`,props:{indeterminate:!1,max:100,value:0},propSyncs:["indeterminate"],setup(){let t;var e=()=>{var e=Math.min(this.value,this.max)/this.max*100;t.style.transform=`translateX(-${100-e}%)`};return{watches:{max:e,value:e},render:()=>d`
        <div class="track"></div>
        <div class="determinable float" ref="${e=>t=e}"></div>
        <div class="indeterminate float"></div>
      `}}}){}B.define();class L extends e({name:"s-menu",style:`
:host{
  display: inline-block;
  vertical-align: middle;
  font-size: .875rem;
  color: var(--s-color-on-surface, #1c1b1f);
}
.dropdown{
  display: block;
}
.container{
  padding: 8px 0;
  max-width: 224px;
  min-height: auto;
  box-sizing: border-box;
}
::slotted(s-menu){
  display: block;
}
::slotted(s-menu[group=start]){
  border-top: solid 1px var(--s-color-outline-variant, #c7c5d0);
  margin-top: 8px;
  padding-top: 8px;
}
::slotted(s-menu[group=end]){
  border-bottom: solid 1px var(--s-color-outline-variant, #c7c5d0);
  margin-bottom: 8px;
  padding-bottom: 8px;
}
`,props:{group:""},propSyncs:["group"],setup(){let t;const e=e=>t.show(e),o=()=>t.dismiss();return this.addEventListener("menu-item:click",e=>{e.stopPropagation(),o()}),{mounted:()=>{this.parentNode instanceof L&&t.setAttribute("align","right")},expose:{show:e,dismiss:o,toggle:e=>t.toggle(e)},render:()=>d`
        <s-dropdown class="dropdown" ref="${e=>t=e}">
          <slot slot="trigger" name="trigger" @click.stop="${()=>e()}"></slot>
          <s-scroll-view class="container">
            <slot></slot>
          </div>
        </s-scroll-view>
      `}}}){}class W extends e({name:"s-menu-item",style:`
:host{
  display: block;
  height: 44px;
}
.container{
  display: flex;
  align-items: center;
  height: 100%;
  cursor: pointer;
  position: relative;
}
.text{
  flex-grow: 1;
  padding: 0 16px;
}
::slotted([slot=start]){
  flex-shrink: 0;
  margin-left: 16px;
  margin-right: -4px;
}
::slotted([slot=end]){
  flex-shrink: 0;
  margin-right: 8px;
}
`,props:{},setup(){const e=()=>{this.dispatchEvent(new Event("menu-item:click",{bubbles:!0}))};return{render:()=>d`
        <s-ripple class="container" @click="${e}">
          <slot name="start"></slot>
          <div class="text">
            <slot></slot>
          </div>
          <slot name="end"></slot>
        </s-ripple>
      `}}}){}L.define(),W.define();class C extends e({name:"s-navigation",style:`
:host{
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  background: var(--s-color-surface, #fffbff);
  box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
  position: relative;
}
:host([mode=rail]){
  flex-direction: column;
  justify-content: flex-start;
  width: 80px;
  box-shadow: none;
  height: 100%;
  background: none;
}
::slotted(s-navigation-item){
  height: 64px;
}
:host([mode=rail]) ::slotted(s-navigation-item){
  height: 72px;
}
:host([mode=rail]) ::slotted(s-icon-button[slot=start]){
  width: 56px;
  height: 56px;
  margin: 16px 0 8px 0;
  border-radius: 12px;
}
:host([mode=rail]) ::slotted([slot=end]){
  flex-grow: 1;
}
`,props:{mode:"bottom"},propSyncs:!0,setup(){let n=[],s=-1,o=!1;const i=e=>{if(0===n.length||!e.selected)return s=-1;for(const t of n)t!==e&&t.selected&&t.removeAttribute("selected");s=n.indexOf(e),o&&(this.dispatchEvent(new Event("change")),o=!1)};return this.addEventListener("navigation-item:update",e=>{e.stopPropagation(),i(e.target)}),this.addEventListener("navigation-item:change",e=>{e.stopPropagation(),o=!0}),{expose:{get options(){return n},get selectedIndex(){return s}},render:()=>d`
        <slot name="start"></slot>
        <slot @slotchange="${(e,t)=>{n=t.assignedElements().filter(e=>e instanceof z),s=-1;let o=null;for(const r of n)r.selected&&(o=r);o&&i(o)}}"></slot>
        <slot name="end"></slot>
      `}}}){}class z extends e({name:"s-navigation-item",style:`
:host{
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  cursor: pointer;
  position: relative;
  font-size: .75rem;
  font-weight: 500;
  box-sizing: border-box;
  width: 100%;
  max-width: 80px;
  text-transform: capitalize;
  color: var(--s-color-on-surface-variant, #46464f);
  transition: color .2s;
}
:host([selected=true]){
  color: var(--s-color-primary, #5256a9);
}
.icon{
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 28px;
  width: 48px;
  border-radius: 14px;
}
.icon::before{
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  left: 0;
  top: 0;
  transform: scale(0);
  transition: transform .2s;
  background: var(--s-color-secondary-container, #e2e0f9);
}
:host([selected=true]) .icon::before{
  transform: scale(1);
}
.badge{
  position: absolute;
  top: 8px;
  left: 50%;
  margin-left: 4px;
}
::slotted([slot=icon]){
  position: relative;
  pointer-events: none;
  color: inherit;
}
::slotted([slot=text]){
  position: relative;
  pointer-events: none;
  margin-top: 4px;
}
`,props:{selected:!1},propSyncs:!0,setup(){return this.addEventListener("click",()=>{this.selected||(this.parentNode instanceof C&&this.dispatchEvent(new Event("navigation-item:change",{bubbles:!0})),this.selected=!0)}),{watches:{selected:()=>{this.parentNode instanceof C&&this.dispatchEvent(new Event("navigation-item:update",{bubbles:!0}))}},render:()=>d`
        <div class="icon">
          <slot name="icon"></slot>
        </div>
        <slot name="text"></slot>
        <div class="badge">
          <slot name="badge"></slot>
        </div>
        <s-ripple attached="true" class="ripple"></s-ripple>
      `}}}){}C.define(),z.define();class P extends e({name:"s-page",style:"\n:host{\n  display: flow-root;\n  color: var(--s-color-on-background);\n  background: var(--s-color-background);\n  font-family: Roboto, system-ui;\n  height: 100%;\n  --s-color-scrim: #000000;\n\n  --s-color-primary: #5256a9;\n  --s-color-on-primary: #ffffff;\n  --s-color-primary-container: #e1e0ff;\n  --s-color-on-primary-container: #090764;\n  --s-color-secondary: #5d5d72;\n  --s-color-on-secondary: #ffffff;\n  --s-color-secondary-container: #e2e0f9;\n  --s-color-on-secondary-container: #191a2c;\n  --s-color-tertiary: #79536a;\n  --s-color-on-tertiary: #ffffff;\n  --s-color-tertiary-container: #ffd8ed;\n  --s-color-on-tertiary-container: #2e1125;\n  --s-color-error: #ba1a1a;\n  --s-color-on-error: #ffffff;\n  --s-color-error-container: #ffdad6;\n  --s-color-on-error-container: #410002;\n  --s-color-background: #fffbff;\n  --s-color-on-background: #1c1b1f;\n  --s-color-outline: #777680;\n  --s-color-outline-variant: #c7c5d0;\n  --s-color-surface: #fffbff;\n  --s-color-on-surface:#1c1b1f;\n  --s-color-surface-variant: #e4e1ec;\n  --s-color-on-surface-variant: #46464f;\n  --s-color-inverse-surface: #313034;\n  --s-color-inverse-on-surface: #f3eff4;\n  --s-color-inverse-primary: #c0c1ff;\n  --s-color-surface-container: #f0edf1;\n  --s-color-surface-container-high: #eae7ec;\n  --s-color-surface-container-highest: #e5e1e6;\n  --s-color-surface-container-low: #f6f2f7;\n  --s-color-surface-container-lowest: #ffffff;\n\n  --s-color-dark-primary: #c0c1ff;\n  --s-color-dark-on-primary: #222578;\n  --s-color-dark-primary-container: #3a3d8f;\n  --s-color-dark-on-primary-container: #e1e0ff;\n  --s-color-dark-secondary: #c5c4dd;\n  --s-color-dark-on-secondary: #2e2f42;\n  --s-color-dark-secondary-container: #454559;\n  --s-color-dark-on-secondary-container: #e2e0f9;\n  --s-color-dark-tertiary: #e8b9d4;\n  --s-color-dark-on-tertiary: #46263b;\n  --s-color-dark-tertiary-container: #5f3c52;\n  --s-color-dark-on-tertiary-container: #ffd8ed;\n  --s-color-dark-error: #ffb4ab;\n  --s-color-dark-on-error: #690005;\n  --s-color-dark-error-container: #93000a;\n  --s-color-dark-on-error-container: #ffb4ab;\n  --s-color-dark-background: #1c1b1f;\n  --s-color-dark-on-background: #e5e1e6;\n  --s-color-dark-outline: #918f9a;\n  --s-color-dark-outline-variant: #46464f;\n  --s-color-dark-surface: #1c1b1f;\n  --s-color-dark-on-surface:#e5e1e6;\n  --s-color-dark-surface-variant: #46464f;\n  --s-color-dark-on-surface-variant: #c7c5d0;\n  --s-color-dark-inverse-surface: #e5e1e6;\n  --s-color-dark-inverse-on-surface: #313034;\n  --s-color-dark-inverse-primary: #5256a9;\n  --s-color-dark-surface-container: #201f23;\n  --s-color-dark-surface-container-high: #2a292d;\n  --s-color-dark-surface-container-highest: #353438;\n  --s-color-dark-surface-container-low: #1c1b1f;\n  --s-color-dark-surface-container-lowest: #0e0e11;\n\n  --s-elevation-level1: 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12);\n  --s-elevation-level2: 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12);\n  --s-elevation-level3: 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12);\n  --s-elevation-level4: 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12);\n  --s-elevation-level5: 0 8px 10px -6px rgba(0, 0, 0, .2), 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12);\n}\n:host([theme=dark]){\n  \n  --s-color-primary: var(--s-color-dark-primary) !important;\n  --s-color-on-primary: var(--s-color-dark-on-primary) !important;\n  --s-color-primary-container: var(--s-color-dark-primary-container) !important;\n  --s-color-on-primary-container: var(--s-color-dark-on-primary-container) !important;\n  --s-color-secondary: var(--s-color-dark-secondary) !important;\n  --s-color-on-secondary: var(--s-color-dark-on-secondary) !important;\n  --s-color-secondary-container: var(--s-color-dark-secondary-container) !important;\n  --s-color-on-secondary-container: var(--s-color-dark-on-secondary-container) !important;\n  --s-color-tertiary: var(--s-color-dark-tertiary) !important;\n  --s-color-on-tertiary: var(--s-color-dark-on-tertiary) !important;\n  --s-color-tertiary-container: var(--s-color-dark-tertiary-container) !important;\n  --s-color-on-tertiary-container: var(--s-color-dark-on-tertiary-container) !important;\n  --s-color-error: var(--s-color-dark-error) !important;\n  --s-color-on-error: var(--s-color-dark-on-error) !important;\n  --s-color-error-container: var(--s-color-dark-error-container) !important;\n  --s-color-on-error-container: var(--s-color-dark-on-error-container) !important;\n  --s-color-background: var(--s-color-dark-background) !important;\n  --s-color-on-background: var(--s-color-dark-on-background) !important;\n  --s-color-outline: var(--s-color-dark-outline) !important;\n  --s-color-outline-variant: var(--s-color-dark-outline-variant) !important;\n  --s-color-surface: var(--s-color-dark-surface) !important;\n  --s-color-on-surface: var(--s-color-dark-on-surface) !important;\n  --s-color-surface-variant: var(--s-color-dark-surface-variant) !important;\n  --s-color-on-surface-variant: var(--s-color-dark-on-surface-variant) !important;\n  --s-color-inverse-surface: var(--s-color-dark-inverse-surface) !important;\n  --s-color-inverse-on-surface: var(--s-color-dark-inverse-on-surface) !important;\n  --s-color-inverse-primary: var(--s-color-dark-inverse-primary) !important;\n  --s-color-surface-container: var(--s-color-dark-surface-container) !important;\n  --s-color-surface-container-high: var(--s-color-dark-surface-container-high) !important;\n  --s-color-surface-container-highest: var(--s-color-dark-surface-container-highest) !important;\n  --s-color-surface-container-low: var(--s-color-dark-surface-container-low) !important;\n  --s-color-surface-container-lowest: var(--s-color-dark-surface-container-lowest) !important;\n\n}\n@media (prefers-color-scheme: dark){\n  :host([theme=auto]){\n    \n  --s-color-primary: var(--s-color-dark-primary) !important;\n  --s-color-on-primary: var(--s-color-dark-on-primary) !important;\n  --s-color-primary-container: var(--s-color-dark-primary-container) !important;\n  --s-color-on-primary-container: var(--s-color-dark-on-primary-container) !important;\n  --s-color-secondary: var(--s-color-dark-secondary) !important;\n  --s-color-on-secondary: var(--s-color-dark-on-secondary) !important;\n  --s-color-secondary-container: var(--s-color-dark-secondary-container) !important;\n  --s-color-on-secondary-container: var(--s-color-dark-on-secondary-container) !important;\n  --s-color-tertiary: var(--s-color-dark-tertiary) !important;\n  --s-color-on-tertiary: var(--s-color-dark-on-tertiary) !important;\n  --s-color-tertiary-container: var(--s-color-dark-tertiary-container) !important;\n  --s-color-on-tertiary-container: var(--s-color-dark-on-tertiary-container) !important;\n  --s-color-error: var(--s-color-dark-error) !important;\n  --s-color-on-error: var(--s-color-dark-on-error) !important;\n  --s-color-error-container: var(--s-color-dark-error-container) !important;\n  --s-color-on-error-container: var(--s-color-dark-on-error-container) !important;\n  --s-color-background: var(--s-color-dark-background) !important;\n  --s-color-on-background: var(--s-color-dark-on-background) !important;\n  --s-color-outline: var(--s-color-dark-outline) !important;\n  --s-color-outline-variant: var(--s-color-dark-outline-variant) !important;\n  --s-color-surface: var(--s-color-dark-surface) !important;\n  --s-color-on-surface: var(--s-color-dark-on-surface) !important;\n  --s-color-surface-variant: var(--s-color-dark-surface-variant) !important;\n  --s-color-on-surface-variant: var(--s-color-dark-on-surface-variant) !important;\n  --s-color-inverse-surface: var(--s-color-dark-inverse-surface) !important;\n  --s-color-inverse-on-surface: var(--s-color-dark-inverse-on-surface) !important;\n  --s-color-inverse-primary: var(--s-color-dark-inverse-primary) !important;\n  --s-color-surface-container: var(--s-color-dark-surface-container) !important;\n  --s-color-surface-container-high: var(--s-color-dark-surface-container-high) !important;\n  --s-color-surface-container-highest: var(--s-color-dark-surface-container-highest) !important;\n  --s-color-surface-container-low: var(--s-color-dark-surface-container-low) !important;\n  --s-color-surface-container-lowest: var(--s-color-dark-surface-container-lowest) !important;\n\n  }\n}\n",props:{theme:"light"},propSyncs:["theme"],setup(){return{render:()=>d`
        <slot></slot>
      `}}}){}P.define();const S={uncheck:"M480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z",checked:"M480-280q83 0 141.5-58.5T680-480q0-83-58.5-141.5T480-680q-83 0-141.5 58.5T280-480q0 83 58.5 141.5T480-280Zm0 200q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"};class O extends e({name:"s-radio-button",style:`
:host{
  display: inline-flex;
  vertical-align: middle;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  position: relative;
  color: var(--s-color-primary, #5256a9);
}
:host([disabled=true]){
  pointer-events: none;
}
.icon{
  width: 60%;
  height: 60%;
  fill: currentColor;
}
.color{
  color: var(--s-color-on-surface-variant, #46464f);
}
:host([checked=true]) .color,
:host([indeterminate=true]) .color{
  color: currentColor;
}
:host([disabled=true]) .color{
  color: color-mix(in srgb ,var(--s-color-on-surface, #1c1b1f) 38%, transparent) !important;
}
`,props:{disabled:!1,checked:!1,name:""},propSyncs:!0,setup(){let t;return{created:()=>{this.addEventListener("click",()=>{this.checked=!0,this.name&&document.querySelectorAll(`${this.tagName}[name='${this.name}']`).forEach(e=>{e!==this&&(e.checked=!1)}),this.dispatchEvent(new Event("change"))})},watches:{checked:e=>t.setAttribute("d",e?S.checked:S.uncheck)},render:()=>d`
        <svg class="icon color" viewBox="0 -960 960 960">
          <path ref="${e=>t=e}" d="${S.uncheck}"></path>
        </svg>
        <s-ripple class="color" attached="true" centered="true"></s-ripple>
      `}}}){}O.define();class X extends e({name:"s-rate",style:`
:host{
  display: inline-flex;
  vertical-align: middle;
  font-size: 24px;
  position: relative;
  overflow: hidden;
  width: calc(1em * 5);
  --rate-unchecked-color: var(--s-color-secondary-container, #e2e0f9);
  --rate-checked-color: var(--s-color-primary, #5256a9);
}
.unchecked{
  width: 100%;
  display: flex;
}
.unchecked svg,
::slotted([slot=unchecked]){
  fill: var(--rate-unchecked-color);
  filter: drop-shadow(1em 0 0 var(--rate-unchecked-color)) drop-shadow(2em 0 0 var(--rate-unchecked-color)) drop-shadow(3em 0 0 var(--rate-unchecked-color));
}
.checked{
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 50%;
  overflow: hidden;
  display: flex;
}
.checked svg,
::slotted([slot=checked]){
  fill: var(--rate-checked-color);
  filter: drop-shadow(1em 0 0 var(--rate-checked-color)) drop-shadow(2em 0 0 var(--rate-checked-color)) drop-shadow(3em 0 0 var(--rate-checked-color));
}
svg,
::slotted(*){
  height: 1em;
  width: 1em;
  flex-shrink: 0;
}
input{
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  cursor: pointer;
  opacity: 0;
  margin: 0;
}
:host([readonly=true]) input{
  display: none;
}
`,props:{readonly:!1,max:10,min:0,value:5,step:1},propSyncs:["readonly"],setup(){let t,o;const r=()=>{var e=100*(Number(o.value)-this.min)/this.max-this.min;t.style.width=e+"%"};return{watches:{max:e=>{e=String(e);o.max!==e&&(o.max=e,r())},min:e=>{e=String(e);o.min!==e&&(o.min=e,r())},step:e=>{e=String(e);o.step!==e&&(o.step=e,r())},value:e=>{e=String(e);o.value!==e&&(o.value=e,r())}},render:()=>d`
        <div class="unchecked">
          <slot name="unchecked">
            <svg viewBox="0 -960 960 960">
              <path d="m305-704 112-145q12-16 28.5-23.5T480-880q18 0 34.5 7.5T543-849l112 145 170 57q26 8 41 29.5t15 47.5q0 12-3.5 24T866-523L756-367l4 164q1 35-23 59t-56 24q-2 0-22-3l-179-50-179 50q-5 2-11 2.5t-11 .5q-32 0-56-24t-23-59l4-165L95-523q-8-11-11.5-23T80-570q0-25 14.5-46.5T135-647l170-57Z"/>
            </svg>
          </slot>
        </div>
        <div class="checked" ref="${e=>t=e}">
          <slot name="checked">
            <svg viewBox="0 -960 960 960">
              <path d="m305-704 112-145q12-16 28.5-23.5T480-880q18 0 34.5 7.5T543-849l112 145 170 57q26 8 41 29.5t15 47.5q0 12-3.5 24T866-523L756-367l4 164q1 35-23 59t-56 24q-2 0-22-3l-179-50-179 50q-5 2-11 2.5t-11 .5q-32 0-56-24t-23-59l4-165L95-523q-8-11-11.5-23T80-570q0-25 14.5-46.5T135-647l170-57Z"/>
            </svg>
          </slot>
        </div>
        <input
          type="range"
          ref="${e=>o=e}"
          max="${this.max}"
          min="${this.min}"
          step="${this.step}"
          value="${this.value}"
          @change="${()=>this.dispatchEvent(new Event("change"))}"
          @input="${()=>{r(),this.dispatchEvent(new Event("input"))}}"
        />
      `}}}){}X.define();class I extends e({name:"s-search",style:`
:host{
  display: inline-flex;
  vertical-align: middle;
  max-width: 520px;
  min-width: 240px;
  height: 48px;
  background: var(--s-color-surface-container-high, #eae7ec);
  color: var(--s-color-on-surface, #1c1b1f);
  border-radius: 24px;
  font-size: .875rem;
  position: relative;
}
:host([size=small]){
  height: 40px;
  min-width: 196px;
  border-radius: 20px;
}
:host([size=large]){
  height: 56px;
  min-width: 280px;
  font-size: 1rem;
  border-radius: 28px;
}
.container{
  display: flex;
  align-items: center;
  height: 100%;
  position: relative;
  flex-grow: 1;
}
:host(:focus-within) .container{
  z-index: 1;
}
.drop{
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  pointer-events: none;
  background: inherit;
  box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
  border-radius: 4px;
  opacity: 0;
  transition: opacity .1s;
}
:host(:focus-within) .drop{
  opacity: 1;
  pointer-events: auto;
  z-index: 1;
}
::slotted([slot=drop]){
  border-top: solid 1px var(--s-color-outline-variant, #c7c5d0);
  margin-top: 48px;
  border-radius: 4px;
}
:host([size=small]:focus-within) ::slotted([slot=drop]){
  margin-top: 40px;
}
:host([size=large]:focus-within) ::slotted([slot=drop]){
  margin-top: 56px;
}
::slotted(input[type=text]){
  border: none;
  padding: 0 16px;
  height: 100%;
  width: 100%;
  flex-grow: 1;
  background: none;
  outline: none;
  font-size: inherit;
  color: inherit;
  box-sizing: border-box;
  line-height: 1;
  font-family: inherit;
}
::slotted(input[type=text])::placeholder{
  color: var(--s-color-outline, #777680);
}
:host([size=large]) ::slotted(input[type=text]){
  padding: 0 24px;
}
::slotted([slot]){
  flex-shrink: 0;
}
::slotted(s-icon[slot=start]){
  margin: 0 -6px 0 12px;
}
::slotted(s-icon[slot=end]){
  margin: 0 12px 0 -6px;
}
:host([size=small]) ::slotted(s-icon-button[slot=start]),
:host([size=small]) ::slotted(s-icon-button[slot=end]){
  width: 40px;
  height: 40px;
}
::slotted(s-icon-button[slot=start]){
  margin: 0 -12px 0 4px;
}
::slotted(s-icon-button[slot=end]){
  margin: 0 4px 0 -12px;
}
:host([size=small]) ::slotted(s-icon-button[slot=start]){
  margin: 0 -12px 0 0;
}
:host([size=small]) ::slotted(s-icon-button[slot=end]){
  margin: 0 0 0 -12px;
}
:host([size=small]) ::slotted(s-icon[slot=start]){
  margin: 0 -6px 0 8px;
}
:host([size=small]) ::slotted(s-icon[slot=end]){
  margin: 0 8px 0 -6px;
}
:host([size=large]) ::slotted(s-icon-button[slot=start]){
  margin: 0 -16px 0 8px;
}
:host([size=large]) ::slotted(s-icon-button[slot=end]){
  margin: 0 8px 0 -16px;
}
:host([size=large]) ::slotted(s-icon[slot=start]){
  margin: 0 -8px 0 16px;
}
:host([size=large]) ::slotted(s-icon[slot=end]){
  margin: 0 16px 0 -8px;
}
`,props:{size:"medium"},propSyncs:!0,setup(){return{render:()=>d`
        <div class="drop">
          <slot name="drop" @mousedown.prevent></slot>
        </div>
        <div class="container">
          <slot name="start"></slot>
          <slot></slot>
          <slot name="end"></slot>
        </div>
      `}}}){}I.define();class Z extends e({name:"s-segmented-button",style:`
:host{
  display: inline-flex;
  align-items: center;
  vertical-align: middle;
  border: solid 1px var(--s-color-outline, #777680);
  border-radius: 20px;
  height: 40px;
  overflow: hidden;
}
`,props:{},setup(){let n=[],s=-1,o=!1;const i=e=>{if(0===n.length||!e.selected)return s=-1;for(const t of n)t!==e&&t.selected&&t.removeAttribute("selected");s=n.indexOf(e),o&&(this.dispatchEvent(new Event("change")),o=!1)};return this.addEventListener("segmented-button-item:update",e=>{e.stopPropagation(),i(e.target)}),this.addEventListener("segmented-button-item:change",e=>{e.stopPropagation(),o=!0}),{expose:{get options(){return n},get selectedIndex(){return s}},render:()=>d`
        <slot @slotchange="${(e,t)=>{n=t.assignedElements().filter(e=>e instanceof M),s=-1;let o=null;for(const r of n)r.selected&&(o=r);o&&i(o)}}"></slot>
      `}}}){}class M extends e({name:"s-segmented-button-item",style:`
:host{
  flex-basis: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--s-color-on-surface, #1c1b1f);
  height: 100%;
  min-width: 48px;
  padding: 0 16px;
  text-transform: capitalize;
  font-weight: 500;
  font-size: .875rem;
  position: relative;
  cursor: pointer;
  box-sizing: border-box;
  border-left: solid 1px var(--s-color-outline, #777680);
}
:host(:first-child){
  border-left-color: transparent;
  margin-left: -1px;
}
:host([selected=true]){
  background: var(--s-color-secondary-container, #e2e0f9);
  color: var(--s-color-on-secondary-container, #191a2c);
}
:host([disabled=true]){
  pointer-events: none;
  color: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 38%, transparent);
}
::slotted(s-icon){
  width: 18px;
  height: 18px;
  flex-shrink: 0;
}
::slotted(s-icon[slot=start]){
  margin-right: 4px;
}
::slotted(s-icon[slot=end]){
  margin-right: 4px;
}
`,props:{selected:!1,disabled:!1,selectable:!0},propSyncs:["selected","disabled"],setup(){return this.addEventListener("click",()=>{!this.selectable||this.selected||(this.parentNode instanceof Z&&this.dispatchEvent(new Event("navigation-item:change",{bubbles:!0})),this.selected=!0)}),{watches:{selected:()=>{this.parentNode instanceof Z&&this.dispatchEvent(new Event("segmented-button-item:update",{bubbles:!0}))}},render:()=>d`
        <slot name="start"></slot>
        <slot></slot>
        <slot name="end"></slot>
        <s-ripple class="ripple" attached="true"></s-ripple>
      `}}}){}Z.define(),M.define();class R extends e({name:"s-slider",style:`
:host{
  display: block;
  color: var(--s-color-primary, #5256a9);
  height: 40px;
  cursor: pointer;
  position: relative;
}
:host([disabled=true]){
  pointer-events: none;
  opacity: .38;
}
.wrapper{
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  pointer-events: none;
}
.track{
  width: calc(100% - 20px);
  height: 4px;
  overflow: hidden;
  position: relative;
  background: var(--s-color-secondary-container, #e2e0f9);
  border-radius: 2px;
}
:host([disabled=true]) .track{
  background: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 31.57894736842105%, transparent);
}
.track>.active-track{
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background: currentColor;
  transform: translateX(-50%);
}
:host([disabled=true]) .track>.active-track{
  background: var(--s-color-on-surface, #1c1b1f);
}
.container{
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  transform: translateX(calc(-50% + 20px));
}
.container::before{
  content:'';
  position: absolute;
  width: 40px;
  height: 40px;
  border-radius: 20px;
  background: currentColor;
  filter: opacity(0);
  transition: filter .2s;
}
.active.container::before{
  filter: opacity(.12);
}
.handle{
  width: 20px;
  height: 20px;
  background: currentColor;
  border-radius: 10px;
  box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
  margin: 10px;
}
:host([disabled=true]) .handle{
  background: var(--s-color-on-surface, #1c1b1f);
  box-shadow: none;
}
.label{
  position: absolute;
  right: 6px;
  margin-bottom: 28px;
  width: 28px;
  height: 28px;
  filter: opacity(0);
  transition: filter .2s,transform .2s;
  transform: scale(.5) translateY(100%);
  transform-origin: center;
  display: none;
}
:host([labeled=true]) .label{
  display: block;
}
.active>.label{
  filter: opacity(1);
  transform: scale(1) translateY(0%);
}
.label::before{
  content: '';
  position: absolute;
  background: currentColor;
  bottom: 23px;
  left: 0;
  width: 28px;
  height: 28px;
  border-radius: 14px;
}
.label::after{
  content: '';
  width: 0;
  display: block;
  border-color: currentColor;
  border-top: 14px solid currentColor;
  border-left: 11px solid transparent;
  border-right: 11px solid transparent;
  margin-left: 3px;
}
.label>span{
  position: absolute;
  color: var(--s-color-on-primary, #ffffff);
  font-size: .625rem;
  width: 28px;
  height: 28px;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: -22px;
}
input{
  margin: 0;
  height: 100%;
  width: calc(100% - 20px);
  cursor: inherit;
  opacity: 0;
  position: absolute;
  top: 0;
  left: 10px;
}
`,props:{disabled:!1,labeled:!1,max:100,min:0,step:1,value:50},propSyncs:["disabled","labeled"],setup(){let t,o,r,n;const s=()=>{var e=100-(100*(Number(r.value)-this.min)/this.max-this.min);t.style.transform=`translateX(-${e}%)`,o.style.transform=`translateX(calc(-${e}% + ${.4*e}px))`,this.value=Number(r.value),n.textContent=r.value};return{watches:{max:e=>{e=String(e);r.max!==e&&(r.max=e,s())},min:e=>{e=String(e);r.min!==e&&(r.min=e,s())},step:e=>{e=String(e);r.step!==e&&(r.step=e,s())},value:e=>{e=String(e);r.value!==e&&(r.value=e,s())}},render:()=>d`
        <div class="wrapper">
          <div class="track">
            <div class="active-track" ref="${e=>t=e}"></div>
          </div>
          <div class="container labeled" ref="${e=>o=e}">
            <div class="handle"></div>
            <div class="label">
              <span ref="${e=>n=e}">${this.value}</span>
            </div>
          </div>
        </div>
        <input
          ref="${e=>r=e}"
          type="range"
          max="${this.max}"
          min="${this.min}"
          step="${this.step}"
          value="${this.value}"
          @change="${()=>this.dispatchEvent(new Event("change"))}"
          @input="${()=>{s(),this.dispatchEvent(new Event("input"))}}"
          @mousedown="${e=>{0!==e.button||l.touched||o.classList.add("active")}}"
          @mouseup="${()=>!l.touched&&o.classList.remove("active")}"
          @touchstart.passive="${()=>l.touched&&o.classList.add("active")}"
          @touchend.passive="${()=>l.touched&&o.classList.remove("active")}"
          @touchcancel.passive="${()=>l.touched&&o.classList.remove("active")}"
        />
      `}}}){}R.define();class A extends e({name:"s-snackbar",style:`
:host{
  display: inline-flex;
  vertical-align: middle;
}
.wrapper{
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  pointer-events: none;
  z-index: 2;
  overflow: hidden;
}
.container{
  background: var(--s-color-inverse-surface, #313034);
  color: var(--s-color-inverse-on-surface, #f3eff4);
  min-height: 48px;
  border-radius: 4px;
  box-shadow: var(--s-elevation-level3, 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12));
  line-height: 1.6;
  display: inline-flex;
  align-items: center;
  min-width: 320px;
  max-width: 480px;
  font-size: .875rem;
  font-weight: 400;
  margin: 16px;
  pointer-events: auto;
  transform: translateY(100%);
  filter: opacity(0);
  transition: transform .2s, filter .2s;
}
.wrapper.show .container{
  transform: translateY(0%);
  filter: opacity(1);
}
.supporting-text{
  margin: 12px 16px;
  flex-grow: 1;
  user-select: text;
  -webkit-user-select: text;
}
::slotted(s-button[slot=action]){
  font-size: inherit;
  flex-shrink: 0;
  border-radius: 4px;
  color: var(--s-color-inverse-primary, #c0c1ff);
  margin-right: 8px;
  margin-left: -8px;
  height: 36px;
}
@media (max-width: 320px){
  .container{
    margin: 8px;
    flex-grow: 1;
    min-width: auto;
  }
}
`,props:{duration:5e3},setup(t){let o;const r={timer:0},e=()=>{var e=c(t);0===e.top&&0===e.left||o.setAttribute("style",`width: ${innerWidth}px;height: ${innerHeight}px;top: ${0-e.top}px;left: ${0-e.left}px`),clearTimeout(r.timer),getComputedStyle(o).top,o.classList.add("show"),this.dispatchEvent(new Event("show")),0<this.duration&&(r.timer=setTimeout(n,this.duration))},n=()=>{clearTimeout(r.timer),o.classList.remove("show"),this.dispatchEvent(new Event("dismiss"))},s=e=>{"transform"===e.propertyName&&(e=o.classList.contains("show"),this.dispatchEvent(new Event(e?"showed":"dismissed")))};return{expose:{show:e,dismiss:n},render:()=>d`
        <slot name="trigger" @click="${e}"></slot>
        <div class="wrapper" ref="${e=>o=e}" @transitionend="${s}">
          <div class="container" part="container">
            <div class="supporting-text">
              <slot></slot>
            </div>
            <slot name="action" @click="${n}"></slot>
          </div>
        </div>
      `}}}){static show=e=>{let t=document.body;const o=new A;var r=document.body.firstElementChild;r&&"S-PAGE"===r.tagName&&(t=r),"string"==typeof e?o.textContent=e:(e.root&&(t=e.root),o.textContent=e.text,e.action&&((r=document.createElement("s-button")).type="text",r.slot="action",r.textContent=e.action.text,e.action.click&&r.addEventListener("click",e.action.click),o.appendChild(r)),e.duration&&(o.duration=e.duration)),t.appendChild(o),o.addEventListener("dismissed",()=>t.removeChild(o)),o.show()}}A.define();class D extends e({name:"s-switch",style:`
:host{
  display: inline-flex;
  vertical-align: middle;
  align-items: center;
  cursor: pointer;
  position: relative;
  color: var(--s-color-primary, #5256a9);
  font-size: 32px;
  width: 1.625em;
  height: 1em;
  border-radius: .5em;
}
:host([disabled=true]){
  pointer-events: none;
}
.track{
  width: 100%;
  height: 100%;
  border-radius: inherit;
  background: var(--s-color-outline, #777680);
  position: absolute;
  padding: .0625em;
  overflow: hidden;
  box-sizing: border-box;
  transition: background .2s;
}
:host([checked=true]) .track{
  background: currentColor;
}
:host([disabled=true]) .track{
  background: var(--s-color-on-surface, #1c1b1f);
  opacity: .12;
}
:host([checked=true][disabled=true]) .track{
  background: var(--s-color-on-surface, #1c1b1f);
}
.track::before{
  content: '';
  display: block;
  height: 100%;
  background: var(--s-color-surface-container-highest, #e5e1e6);
  border-radius: inherit;
}
:host([checked=true]) .track::before{
  opacity: 0;
}
:host([disabled=true]) .track::before{
  background: var(--s-color-surface, #fffbff);
}
.ripple{
  height: 1.25em;
  width: 1.25em;
  border-radius: 50%;
  top: auto;
  margin-left: -0.125em;
  transition: transform .2s;
  display: flex;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  color: var(--s-color-outline, #777680);
}
:host([checked=true]) .ripple{
  transform: translateX(50%);
  color: currentColor;
}
.thumb{
  background: var(--s-color-outline, #777680);
  border-radius: 50%;
  width: .75em;
  height: .75em;
  transform: scale(.6666666666666667) translateX(0px);
  transform-origin: center;
  transition: transform .2s,box-shadow .2s;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
}
:host([checked=true]) .thumb{
  background: var(--s-color-on-primary, #ffffff);
  transform: scale(1);
  box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
}
:host([disabled=true]) .thumb{
  background: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 38%, transparent);
  box-shadow: none;
}
:host([checked=true][disabled=true]) .thumb{
  background: var(--s-color-surface, #fffbff);
}
.icon{
  width: .5em;
  height: .5em;
  fill: currentColor;
  opacity: 0;
  transition: opacity .2s;
}
:host([checked=true]) .icon{
  opacity: 1;
}
:host([checked=true][disabled=true]) .icon{
  fill: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 12%, transparent);
}
`,props:{disabled:!1,checked:!1},propSyncs:!0,setup(){return this.addEventListener("click",()=>{this.checked=!this.checked,this.dispatchEvent(new Event("change"))}),{render:()=>d`
        <div class="track">
        </div>
        <s-ripple attached="true" centered="true" class="ripple">
          <div class="thumb">
            <svg class="icon" viewBox="0 -960 960 960">
              <path d="M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z"></path>
            </svg>
          </div>
        </s-ripple>
      `}}}){}D.define();class H extends e({name:"s-tab",style:`
:host{
  display: flex;
  justify-content: center;
  position: relative;
  background: var(--s-color-surface, #fffbff);
  color: var(--s-color-on-surface-variant, #46464f);
}
:host::before{
  content: '';
  position: absolute;
  width: 100%;
  height: 1px;
  background: var(--s-color-surface-variant, #e4e1ec);
  bottom: 0;
  left: 0;
}
.container{
  display: flex;
  justify-content: flex-start;
  align-items: center;
  position: relative;
  scrollbar-width: none;
  overflow-x: auto;
}
.container::-webkit-scrollbar{
  display: none;
}
:host([mode=fixed]) .container{
  overflow: hidden;
  width: 100%;
}
::slotted(s-tab-item){
  flex-shrink: 0;
  flex-basis: auto;
}
:host([mode=fixed]) ::slotted(s-tab-item){
  flex-basis: 100%;
  flex-shrink: 1;
}
`,props:{mode:"scrollable"},propSyncs:["mode"],setup(){let s,i=[],a=-1,l=!1;const n=e=>{if(0===i.length||!e.selected)return a=-1;let t=null;for(const n of i)n!==e&&n.selected&&(t=n).removeAttribute("selected");var o,r;a=i.indexOf(e),l&&(this.dispatchEvent(new Event("change")),l=!1),this.isConnected&&(s.scrollWidth!==s.offsetWidth&&(o=e.offsetLeft-s.offsetWidth+s.offsetWidth/2+e.offsetWidth/2,s.scrollTo({left:o,behavior:"smooth"})),t)&&(t.indicator.addEventListener("transitionend",()=>{t?.indicator.removeAttribute("style"),e.indicator.removeAttribute("style")},{once:!0}),o=t.indicator.getBoundingClientRect().left,r=e.indicator.getBoundingClientRect(),e.indicator.setAttribute("style","transition:none;filter:opacity(0)"),t.indicator.setAttribute("style",`transition: transform .2s, width .2s;filter:opacity(1);transform:translateX(${r.left-o}px);width: ${r.width}px`))};return this.addEventListener("tab-item:update",e=>{e.stopPropagation(),n(e.target)}),this.addEventListener("tab-item:change",e=>{e.stopPropagation(),l=!0}),{expose:{get options(){return i},get selectedIndex(){return a}},render:()=>d`
        <div class="container" ref="${e=>s=e}">
          <slot @slotchange="${(e,t)=>{i=t.assignedElements().filter(e=>e instanceof N),a=-1;let o=null;for(const r of i)r.selected&&(o=r);o&&n(o)}}"></slot>
        </div>
      `}}}){}class N extends e({name:"s-tab-item",style:`
:host{
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 48px;
  position: relative;
  cursor: pointer;
  font-size: .875rem;
  font-weight: 500;
  text-transform: capitalize;
  padding: 0 16px;
}
:host([selected=true]){
  color: var(--s-color-primary, #5256a9);
}
.container{
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  position: relative;
  min-height: inherit;
}
.indicator{
  position: absolute;
  left: 0;
  bottom: 0;
  height: 3px;
  width: 100%;
  background: var(--s-color-primary, #5256a9);
  border-radius: 1.5px 1.5px 0 0;
  filter: opacity(0);
}
:host([selected=true]) .indicator{
  filter: opacity(1);
}
.text{
  display: flex;
  align-items: center;
}
.icon .badge{
  position: absolute;
  top: 8px;
  left: 50%;
}
::slotted([slot=icon]){
  height: 42px;
  color: inherit;
}
::slotted([slot=text]){
  white-space: nowrap;
  text-overflow: ellipsis;
  line-height: 1;
}
.icon ::slotted([slot=text]){
  height: 26px;
  margin-top: -4px;
}
::slotted([slot=badge]){
  margin-left: 4px;
}
`,props:{selected:!1},propSyncs:!0,setup(){let o,t;return this.addEventListener("click",()=>{this.selected||(this.parentNode instanceof H&&this.dispatchEvent(new Event("tab-item:change",{bubbles:!0})),this.selected=!0)}),{expose:{get indicator(){return t}},watches:{selected:()=>{this.parentNode instanceof H&&this.dispatchEvent(new Event("tab-item:update",{bubbles:!0}))}},render:()=>d`
        <div class="container" ref="${e=>o=e}">
          <slot name="icon" @slotchange="${(e,t)=>{t=t.assignedElements().length;o.classList[0<t?"add":"remove"]("icon")}}"></slot>
          <div class="text">
            <slot name="text"></slot>
            <div class="badge">
              <slot name="badge"></slot>
            </div>
          </div>
          <div class="indicator" ref="${e=>t=e}"></div>
        </div>
        <s-ripple attached="true"></s-ripple>
      `}}}){}H.define(),N.define();class Y extends e({name:"s-table",style:`
:host{
  display: block;
  font-size: .875rem;
  border: solid 1px var(--s-color-outline-variant, #c7c5d0);
  border-radius: 8px;
  white-space: nowrap;
  overflow: hidden;
}
.container{
  display: table;
  width: 100%;
  border-collapse: collapse;
}
`,props:{},setup(){return{render:()=>d`
        <div class="container" part="container">
          <slot></slot>
        </div>
      `}}}){}class F extends e({name:"s-thead",style:`
:host{
  display: table-header-group;
  font-weight: 600;
  color: var(--s-color-on-surface-variant, #46464f);
}
`,props:{},setup(){return{render:()=>d`
        <slot></slot>
      `}}}){}class G extends e({name:"s-tbody",style:`
:host{
  display: table-row-group;
  color: var(--s-color-on-surface, #1c1b1f);
  position: relative;
}
::slotted(s-tr){
  border-top: solid 1px var(--s-color-outline-variant, #c7c5d0);
}
`,props:{},setup(){return{render:()=>d`
        <slot></slot>
      `}}}){}class Q extends e({name:"s-tr",style:`
:host{
  display: table-row;
}
`,props:{},setup(){return{render:()=>d`
        <slot></slot>
      `}}}){}class V extends e({name:"s-th",style:`
:host{
  display: table-cell;
  padding: 16px;
}
:host(:not(:first-child)){
  width: 0;
  text-align: right;
}
`,props:{},setup(){return{render:()=>d`
        <slot></slot>
      `}}}){}class J extends e({name:"s-td",style:`
:host{
  display: contents;
  user-select: text;
  padding: 12px 16px;
}
:host(:not(:first-child)){
  text-align: right;
}
td{
  padding: inherit;
  vertical-align: middle;
}
`,props:{colspan:1,rowspan:1},setup(){let t;return{watches:{colspan:e=>t.colSpan=e,rowspan:e=>t.rowSpan=e},render:()=>d`
        <td ref="${e=>t=e}" rowspan="${this.rowspan}" colspan="${this.colspan}">
          <slot></slot>
        </td>
      `}}}){}Y.define(),F.define(),G.define(),Q.define(),V.define(),J.define();class K extends e({name:"s-text-field",style:`
:host{
  display: inline-block;
  vertical-align: middle;
  min-width: 280px;
  border-radius: 4px;
  position: relative;
  color: var(--s-color-primary, #5256a9);
}
.container{
  border-radius: inherit;
  color: var(--s-color-outline, #777680);
  display: flex;
  align-items: center;
}
:host(:focus-within) .container{
  color: currentColor;
}
.outline{
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  border: solid 1px currentColor;
  box-sizing: border-box;
  border-radius: inherit;
  pointer-events: none;
  border-top: none;
  transition: box-shadow .2s;
}
:host(:focus-within) .outline{
  box-shadow: 1px 0 currentColor inset, -1px 0 currentColor inset, 0 -1px currentColor inset;
}
.label{
  display: flex;
  align-items: flex-end;
  height: 16px;
  width: 100%;
  position: absolute;
  top: -8px;
  left: 0;
  pointer-events: none;
}
.label::before{
  content: '';
  border-color: currentColor;
  border-width: 1px;
  border-top-style: solid;
  border-left-style: solid;
  height: 8px;
  width: 12px;
  box-sizing: border-box;
  border-top-left-radius: 4px;
  transition: box-shadow .2s;
  flex-shrink: 0;
}
:host(:focus-within) .label::before{
  border-color: currentColor;
  box-shadow: 0 1px currentColor inset, 1px 0 currentColor inset;
}
.label::after{
  content: '';
  border-color: var(--s-color-outline, #777680);
  border-width: 1px;
  border-top-style: solid;
  border-right-style: solid;
  height: 8px;
  flex-grow: 1;
  box-sizing: border-box;
  border-top-right-radius: 4px;
  transition: box-shadow .2s;
}
:host(:focus-within) .label::after{
  border-color: currentColor;
  box-shadow: -1px 0 currentColor inset, 0 1px currentColor inset;
}
.label>span{
  padding: 0 4px;
  transform-origin: left;
  transition: font-size .2s, color .2s, transform .2s;
  left: 12px;
  font-size: 1rem;
  transform: translateY(31px);
  position: absolute;
}
.not-empty .label>span,
:host(:focus-within) .label>span{
  transform: translateY(0);
  font-size: .75rem;
  position: static;
}
.label>span:empty{
  padding: 0;
}
.content{
  position: relative;
  flex-grow: 1;
}
::slotted(input[type=text]),
::slotted(textarea),
.textarea{
  border: none;
  padding: 0 16px;
  min-height: 56px;
  width: 100%;
  flex-grow: 1;
  background: none;
  outline: none;
  font-size: inherit;
  color: var(--s-color-on-surface, #1c1b1f);
  box-sizing: border-box;
  line-height: 1;
  font-family: inherit;
  display: block;
}
::slotted(textarea){
  height: 0;
}
::slotted(textarea),
.textarea{
  padding: 16px;
  scrollbar-width: none;
  resize: none;
  line-height: 1.5;
  word-wrap: break-word;
  word-break: break-all;
  white-space: pre-wrap;
}
.textarea{
  position: absolute;
  left: 0;
  top: 0;
  height: auto;
  pointer-events: none;
  visibility: hidden;
}
.textarea::after{
  content: ' ';
}
::slotted(input[type=text])::placeholder,
::slotted(textarea)::placeholder{
  color: var(--s-color-outline, #777680);
}
::slotted([slot=end]){
  flex-shrink: 0;
}
::slotted(s-icon[slot=end]){
  margin: 0 12px 0 -8px;
}
::slotted(s-icon-button[slot=end]){
  margin: 0 4px 0 -12px;
}
.focus ::slotted([slot=end]){
  color: currentColor;
}
`,props:{label:""},propSyncs:!0,setup(){let t,o,r,n,s;const i=()=>{n&&n.parentNode===this&&(""===n.value?t.classList.remove("not-empty"):t.classList.add("not-empty"),n instanceof HTMLTextAreaElement)&&(s.textContent=n.value,n.offsetHeight!==s.offsetHeight)&&(n.style.height=s.offsetHeight+"px")},a=t=>{t.addEventListener("input",i);var e=Object.getOwnPropertyDescriptor(Object.getPrototypeOf(t),"value");if(e){const o=e.set;e.set=e=>{o?.apply(t,[e]),n&&n.parentNode===this&&i()},Object.defineProperty(t,"value",e)}n=t,i()};return{watches:{label:e=>o.textContent=e},render:()=>d`
        <div class="container" ref="${e=>t=e}">
          <div class="outline"></div>
          <div class="label">
            <span ref="${e=>o=e}"></span>
          </div>
          <div class="content">
            <slot style="min-height: inherit;" @slotchange="${()=>{var e=r.assignedElements()[0];e&&(e instanceof HTMLInputElement||e instanceof HTMLTextAreaElement)&&a(e)}}" ref="${e=>r=e}"></slot>
            <div ref="${e=>s=e}" class="textarea"></div>
          </div>
          <slot name="end"></slot>
        </div>
      `}}}){}K.define();class U extends e({name:"s-tooltip",style:`
:host{
  position: relative;
  display: inline-flex;
  vertical-align: middle;
}
.container{
  position: fixed;
  left: 0;
  top: 0;
  z-index: 1;
  background: var(--s-color-inverse-surface, #313034);
  color: var(--s-color-inverse-on-surface, #f3eff4);
  font-size: .875rem;
  font-weight: 400;
  padding: 6px 8px;
  border-radius: 4px;
  white-space: nowrap;
  opacity: .95;
  filter: opacity(0);
  transition: filter .2s;
  pointer-events: none;
}
.container.show{
  filter: opacity(1);
}
::slotted(img){
  display: block;
  border-radius: 4px;
  margin: 2px 0;
}
`,props:{},setup(n){let s,i;const a={showed:!1,timer:0},e=()=>{var e,t,o,r;this.isConnected&&!a.showed&&(e=s.getBoundingClientRect(),t=c(n),o=i.offsetWidth,r=i.offsetHeight,(r={top:e.top-4-r,left:e.left-(o-e.width)/2}).left<0&&(r.left=e.left),r.left+o>innerWidth&&(r.left=e.left+e.width-o),r.top<0&&(r.top=e.top+s.offsetHeight+4),i.setAttribute("style",`left: ${r.left-t.left}px;top: ${r.top-t.top}px`),i.classList.add("show"),a.showed=!0)},t=()=>{this.isConnected&&a.showed&&(i.classList.remove("show"),a.showed=!1)};return{render:()=>d`
        <div ref="${e=>s=e}" 
          @wheel.passive="${t}"
          @mouseover="${()=>!l.touched&&e()}"
          @mouseleave="${()=>!l.touched&&t()}"
          @touchstart="${()=>{clearTimeout(a.timer),a.timer=setTimeout(e,600)}}"
          @touchend="${()=>{clearTimeout(a.timer),t()}}"
        >
          <slot name="trigger"></slot>
        </div>
        <div class="container" part="container" ref="${e=>i=e}" @transitionend="${()=>{i.classList.contains("show")||i.removeAttribute("style")}}">
          <slot></slot>
        </div>
      `}}}){}U.define();class ee extends e({name:"s-top-app-bar",style:`
:host{
  display: flex;
  height: 64px;
  background: var(--s-color-surface-container, #f0edf1);
  color: var(--s-color-on-surface, #1c1b1f);
  align-items: center;
  padding: 0 8px;
}
slot[name=navigation]{
  display: block;
  flex-shrink: 0;
}
::slotted([slot=navigation]){
  margin: 0 4px;
}
slot[name=action]{
  display: block;
  flex-shrink: 0;
}
::slotted([slot=action]){
  margin: 0 4px;
}
::slotted(s-search){
  background: var(--s-color-surface, #fffbff);
}
::slotted(s-top-app-bar){
  height: 100%;
  width: 100%;
  max-width: 1280px;
  padding: 0;
  background: none;
  margin: 0 auto;
}
.headline{
  overflow: hidden;
}
.grow{
  flex-grow: 1;
  min-width: 0;
  height: 100%;
}
::slotted([slot=headline]){
  font-size: 1.375rem;
  font-weight: 400;
  overflow: hidden;
  text-transform: capitalize;
  text-overflow: ellipsis;
  white-space: nowrap;
  margin: 0 16px;
}
@media(max-width: 840px){
  :host{
    height: 56px;
  }
}
`,props:{},setup(){return{render:()=>d`
        <slot name="navigation"></slot>
        <div class="headline">
          <slot name="headline"></slot>
        </div>
        <div class="grow">
          <slot></slot>
        </div>
        <slot name="action"></slot>
      `}}}){}return ee.define(),Object.freeze({__proto__:null,Badge:t,Button:i,Card:a,Carousel:v,Checkbox:x,Chip:g,CircularProgress:b,Dialog:w,Divider:k,Drawer:$,Dropdown:E,FAB:T,Icon:j,IconButton:_,LinearProgress:B,Menu:L,MenuItem:W,Navigation:C,NavigationItem:z,Page:P,RadioButton:O,Rate:X,Ripple:s,ScrollView:y,Search:I,SegmentedButton:Z,SegmentedButtonItem:M,Slider:R,Snackbar:A,Switch:D,Tab:H,TabItem:N,Table:Y,Tbody:G,Td:J,TextField:K,Th:V,Thead:F,Tooltip:U,TopAppBar:ee,Tr:Q})});
//# sourceMappingURL=sober.min.js.map
